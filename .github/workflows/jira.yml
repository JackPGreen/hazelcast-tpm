name: Create Issue in Jira when to-jira label added

on:
  issues:
    types: labeled

jobs:
  jira1:
    if: ${{ github.event.label.name == 'to-jira' }}
    runs-on: ubuntu-latest
    steps:
      - name: Identify team name
        id: get-team
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const labels = ${{ toJson(github.event.issue.labels) }}
            const teamLabel = labels.find(label => label.name.includes('Team: '))?.name || ""
            return teamLabel.replace('Team: ','')
      - name: Identify issue type
        id: get-issue-type
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const labels = ${{ toJson(github.event.issue.labels) }}
            const issueType = labels.some(label => label.name.includes('Test-Failure')) 
              ? "Test Failure" 
              : "Bug"
            return issueType           
      - name: Test composite one
        uses: hazelcast/github-jira-tool-action@main
        with:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          TARGET_JIRA_PROJECT: HZ
          ISSUE_TYPE: ${{ steps.get-issue-type.outputs.result }}
          JIRA_LABEL: from-gh
          TEAM_NAME: ${{ steps.get-team.outputs.result }}
  jira2:
    if: ${{ github.event.label.name == 'to-client-jira' }}
    runs-on: ubuntu-latest
    steps:
      - name: Test composite one
        uses: hazelcast/github-jira-tool-action@v3.2.0
        with:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          TARGET_JIRA_PROJECT: API
          JIRA_LABEL: Java
          ISSUE_TYPE: Bug
